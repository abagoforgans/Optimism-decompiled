contract main {




// =====================  Runtime code  =====================


function _fallback() payable {
    revert
}

function sub_0565856b(?) payable {
    mem[96] = 1
    mem[128] = call.data[calldata.size]
    mem[160] = 983042
    idx = 0
    while idx < mem[96]:
        if idx >= 1:
            revert with 0, 50
        if idx >= mem[96]:
            revert with 0, 50
        mem[(32 * idx) + 128] = mem[(32 * idx) + 160]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    mem[192] = 2
    mem[224] = 96
    s = 224
    idx = 2
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    mem[352] = 777
    mem[384 len 777] = 0xfe01447f672613001f6e27000d002d6e1f000b00306e1e000a00326e1d000900346e1c000800366e1b000700386e1a0006003a6e19000500096e3b6f10000400086e0170336f0171096f0f000300096e0170336f0271016f0171016f0171046f0f0002000a6e0170046f0271026f0271026f0171026f0171016f0171016f0171026f0171026f0271046f0271036f0271036f0271026f0171026f0171026f0171026f0271016f0171036f076e080002000a6e0170036f0171036f0171026f0171016f0171016f0271016f0171016f0271016f0171016f0171056f0171046f0171026f0171016f0171026f0171016f0171026f0171026f0171026f0171026f0171036f0c6e030001000b6e0170036f0171036f0171026f0171016f0271016f0171016f0171016f0171016f0271016f0171056f0171046f0171026f0171016f0171026f0171016f0271016f01710c6f0d6e02000c6e0170036f0171036f0171026f0171016f0171026f0171016f0171016f0171026f0171016f0171016f0271036f0271026f0171026f0171016f0171026f0171016f0171016f02710c6f0e6e01000c6e0170036f0171036f0171026f0171016f0171026f0171016f0171016f0171026f0171016f0171026f0171056f0171016f0171026f0171016f0171026f0171016f0171026f01710c6f0e6e01000c6e0170036f0171036f0171026f0171016f0171026f0171016f0171016f0171026f0171016f0171026f0171056f0171016f0171026f0171016f0171026f0171016f0171026f01710c6f0e6e01000c6e0170046f0271026f0271026f0171026f0171016f0171016f0171026f0171026f0271046f0271036f0271036f0271026f0171026f01710c6f0f6e0c6e01703d6f0f6e0d6e01703b6f106e0e6e3b70106e0100586e596e596e586e0100586e01000100576e01000100566e02000100536e05000100516e070002000c6e0d000c6e05000e6e0c000c6e070002000b6e0f000a6e07000c6e0e000a6e080001000272096e1172086e09720b6e0f72086e077202000472076e1372066e0b72096e1172066e097201000200547203
    mem[288] = 352
    mem[64] = 2016
    mem[1184] = 777
    mem[1216 len 777] = 0xfe01447f672613001f6e27000d002d6e1f000b00306e1e000a00326e1d000900346e1c000800366e1b000700386e1a0006003a6e19000500096e3b6f10000400086e0170336f0171096f0f000300096e0170336f0271016f0171016f0171046f0f0002000a6e0170046f0271026f0271026f0171026f0171016f0171016f0171026f0171026f0271046f0271036f0271036f0271026f0171026f0171026f0171026f0271016f0171036f076e080002000a6e0170036f0171036f0171026f0171016f0171016f0271016f0171016f0271016f0171016f0171056f0171046f0171026f0171016f0171026f0171016f0171026f0171026f0171026f0171026f0171036f0c6e030001000b6e0170036f0171036f0171026f0171016f0271016f0171016f0171016f0171016f0271016f0171056f0171046f0171026f0171016f0171026f0171016f0271016f01710c6f0d6e02000c6e0170036f0171036f0171026f0171016f0171026f0171016f0171016f0171026f0171016f0171016f0271036f0271026f0171026f0171016f0171026f0171016f0171016f02710c6f0e6e01000c6e0170036f0171036f0171026f0171016f0171026f0171016f0171016f0171026f0171016f0171026f0171056f0171016f0171026f0171016f0171026f0171016f0171026f01710c6f0e6e01000c6e0170036f0171036f0171026f0171016f0171026f0171016f0171016f0171026f0171016f0171026f0171056f0171016f0171026f0171016f0171026f0171016f0171026f01710c6f0e6e01000c6e0170046f0271026f0271026f0171026f0171016f0171016f0171026f0171026f0271046f0271036f0271036f0271026f0171026f01710c6f0f6e0c6e01703d6f0f6e0d6e01703b6f106e0e6e3b70106e0100586e596e596e586e0100586e01000100576e01000100566e02000100536e05000100516e070002000c6e0d000c6e05000e6e0c000c6e070002000b6e0f000a6e07000c6e0e000a6e080001000272096e1172086e09720b6e0f72086e077202000472076e1372066e0b72096e1172066e097201000200547203
    mem[320] = 1184
    idx = 0
    while idx < mem[192]:
        if idx >= 2:
            revert with 0, 50
        if idx >= mem[192]:
            revert with 0, 50
        mem[(32 * idx) + 224] = mem[(32 * idx) + 288]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    mem[2016] = 64
    _29 = mem[96]
    mem[2080] = mem[96]
    mem[2112 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
    idx = mem[96]
    mem[2048] = (32 * mem[96]) + 96
    _36 = mem[192]
    mem[(32 * mem[96]) + 2112] = mem[192]
    idx = 0
    s = 224
    t = (32 * mem[96]) + (32 * mem[192]) + 2144
    u = (32 * mem[96]) + 2144
    while idx < _36:
        mem[u] = t + -(32 * _29) - 2144
        _42 = mem[s]
        _43 = mem[mem[s]]
        mem[t] = mem[mem[s]]
        v = 0
        while v < _43:
            mem[v + t + 32] = mem[v + _42 + 32]
            v = v + 32
            continue 
        if ceil32(_43) > _43:
            mem[t + _43 + 32] = 0
        idx = idx + 1
        s = s + 32
        t = ceil32(_43) + t + 32
        u = u + 32
        continue 
    return memory
      from mem[64]
       len t - mem[64]
}



}
